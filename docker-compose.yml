services:
  redis:
    build:
      context: .
      dockerfile: Dockerfile.redis
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"

  postgres:
    image: postgres:13
    environment:
      POSTGRES_DB: vunderkids
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 1234
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - /home/vunderkids/backup:/backup
    ports:
      - "5432:5432"
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"

  backend:
    build:
      context: ./vunderkids
    volumes:
      - .:/code
    depends_on:
      - redis
      - postgres
      - rabbitmq
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://postgres:1234@postgres:5432/vunderkids
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"

  frontend:
    build:
      context: ./vunderkids-v2.1/webproject
    volumes:
      - games_volume:/frontend/dist/games/
    ports:
      - "3000:3000"
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - ./letsencrypt:/var/www/letsencrypt
      - ./ssl:/etc/ssl/certs
      - games_volume:/usr/share/nginx/html/games/
      - ./vunderkids/staticfiles:/usr/share/nginx/html/static
    depends_on:
      - backend
      - frontend
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"

  celery_worker:
    build:
      context: ./vunderkids
    volumes:
      - .:/code
    depends_on:
      - redis
      - rabbitmq
      - postgres
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DATABASE_URL=postgres://postgres:1234@postgres:5432/vunderkids
    command: celery -A vunderkids worker --loglevel=info
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"

  celery_beat:
    build:
      context: ./vunderkids
    volumes:
      - .:/code
    depends_on:
      - redis
      - rabbitmq
      - postgres
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
      - CELERY_RESULT_BACKEND=rpc://
      - DATABASE_URL=postgres://postgres:1234@postgres:5432/vunderkids
    command: >
      sh -c "rm -f /code/celerybeat-schedule/* &&
             celery -A vunderkids beat --loglevel=info"
    # logging:
    #   driver: "json-file"
    #   options:
    #     max-size: "10m"
    #     max-file: "3"

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
  #   environment:
  #     - discovery.type=single-node
  #   ports:
  #     - "9200:9200"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.9.3
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"

volumes:
  redis_data:
  postgres_data:
  games_volume: